from aiogram import Router, F
from aiogram.types import Message, BotCommand, BotCommandScopeAllGroupChats, BotCommandScopeAllPrivateChats, BotCommandScopeChat
from app.config import settings
from app.repositories import upsert_user

router = Router()


@router.message(F.text.regexp(r"^/(start|about)(@.+)?$"))
async def cmd_start(message: Message):
    await upsert_user(message.bot.db, message.from_user.id, message.from_user.username, message.from_user.first_name)
    text = (
        "ü§ñ –ë–æ—Ç —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ–π —ñ –∫–≤—ñ–∑—ñ–≤\n\n"
        "üìñ –î—ñ–ª–∏—Å—å —É–ª—é–±–ª–µ–Ω–∏–º–∏ –∫–Ω–∏–≥–∞–º–∏, —Ñ—ñ–ª—å–º–∞–º–∏, —Å–µ—Ä—ñ–∞–ª–∞–º–∏ —á–∏ —ñ–≥—Ä–∞–º–∏.\n"
        "üß† –ü—Ä–æ—Ö–æ–¥—å –∫–≤—ñ–∑–∏ —É –ø—Ä–∏–≤–∞—Ç—ñ.\n"
        "üèÜ –ó–º–∞–≥–∞–π—Å—è —É –ª—ñ–¥–µ—Ä–∞—Ö.\n"
    )
    await message.answer(text)


async def set_bot_commands(bot):
    # --- –ö–æ–º–∞–Ω–¥–∏ –¥–ª—è –≥—Ä—É–ø ---
    await bot.set_my_commands([
        BotCommand(command="create_rec", description="üìñ –°—Ç–≤–æ—Ä–∏—Ç–∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ—é"),
        BotCommand(command="get_recs",   description="üìö –ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ—ó"),
        BotCommand(command="quiz",       description="üß† –ü—Ä–æ–π—Ç–∏ –∫–≤—ñ–∑"),
        BotCommand(command="leaders",    description="üèÜ –õ—ñ–¥–µ—Ä–∏ –∫–≤—ñ–∑—ñ–≤"),
        BotCommand(command="about",      description="‚ÑπÔ∏è –ü—Ä–æ –±–æ—Ç–∞"),
    ], scope=BotCommandScopeAllGroupChats())

    # --- –ë–∞–∑–æ–≤—ñ –∫–æ–º–∞–Ω–¥–∏ –¥–ª—è –≤—Å—ñ—Ö —É –ø—Ä–∏–≤–∞—Ç—ñ ---
    base_private_cmds = [
        BotCommand(command="create_rec",  description="üìñ –°—Ç–≤–æ—Ä–∏—Ç–∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ—é"),
        BotCommand(command="create_quiz", description="üß† –°—Ç–≤–æ—Ä–∏—Ç–∏ –∫–≤—ñ–∑"),
        BotCommand(command="quiz",        description="üß† –ü—Ä–æ–π—Ç–∏ –∫–≤—ñ–∑"),
        BotCommand(command="my_results",  description="üìä –ú–æ—ó —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏"),
        BotCommand(command="about",       description="‚ÑπÔ∏è –ü—Ä–æ –±–æ—Ç–∞"),
    ]
    await bot.set_my_commands(base_private_cmds, scope=BotCommandScopeAllPrivateChats())

       # --- –ö–æ–º–∞–Ω–¥–∏ –¥–ª—è –∞–¥–º—ñ–Ω—ñ–≤ (–¥–æ–¥–∞—î–º–æ –ø–æ–≤–µ—Ä—Ö –±–∞–∑–æ–≤–∏—Ö) ---
    admin_cmds = base_private_cmds + [
        BotCommand(command="pending", description="üïì –û—á—ñ–∫—É—é—Ç—å —Å—Ö–≤–∞–ª–µ–Ω–Ω—è"),
    ]

    for admin_id in settings.ADMIN_IDS:
        await bot.set_my_commands(admin_cmds, scope=BotCommandScopeChat(chat_id=admin_id))

# --- –í—ñ—Ç–∞–Ω–Ω—è –Ω–æ–≤–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ —É –≥—Ä—É–ø—ñ ---
from aiogram.types import ChatMemberUpdated

@router.chat_member()
async def greet_new_member(event: ChatMemberUpdated):
    """
    –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–µ –≤—ñ—Ç–∞–Ω–Ω—è –Ω–æ–≤–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ —É –≥—Ä—É–ø—ñ.
    """
    # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ —Ü–µ –Ω–æ–≤–∏–π —É—á–∞—Å–Ω–∏–∫
    if event.new_chat_member.status == "member" and event.chat.type in ("group", "supergroup"):
        new_user = event.new_chat_member.user
        # –Ø–∫—â–æ –Ω–æ–≤–∏–π –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á ‚Äî –Ω–µ –±–æ—Ç
        if not new_user.is_bot:
            await event.bot.send_message(
                event.chat.id,
                f"üëã –ü—Ä–∏–≤—ñ—Ç, {new_user.first_name}!\n"
                f"–©–æ–± –∫–æ—Ä–∏—Å—Ç—É–≤–∞—Ç–∏—Å—è –±–æ—Ç–æ–º –ø–æ–≤–Ω—ñ—Å—Ç—é ‚Äî –Ω–∞—Ç–∏—Å–Ω–∏ –∫–Ω–æ–ø–∫—É Start —É –ø—Ä–∏–≤–∞—Ç—ñ üëá\n"
                f"üëâ [@{(await event.bot.me()).username}](https://t.me/{(await event.bot.me()).username})",
                disable_web_page_preview=True
            )
