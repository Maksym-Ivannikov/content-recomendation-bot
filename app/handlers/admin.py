from aiogram import Router, F
from aiogram.types import Message, CallbackQuery
from app.config import settings
from app.db import async_session
from app.repositories import get_pending_questions, approve_question
from app.keyboards import approve_kb

router = Router()


def is_admin(user_id: int) -> bool:
    return user_id in settings.ADMIN_IDS


# --- –ø–æ–∫–∞–∑–∞—Ç–∏ –ø–∏—Ç–∞–Ω–Ω—è, —â–æ –æ—á—ñ–∫—É—é—Ç—å –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü—ñ—é
@router.message(F.text.in_({"/pending", "/pending_questions"}))
async def pending_questions(message: Message):
    if not is_admin(message.from_user.id):
        return

    async with async_session() as db:
        items = await get_pending_questions(db, limit=1)

    if not items:
        await message.answer("‚úÖ –ù–µ–º–∞—î –ø–∏—Ç–∞–Ω—å –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü—ñ—é.")
        return

    q = items[0]
    text = (
        f"üìù –ü–∏—Ç–∞–Ω–Ω—è #{q.id} (–∫–≤—ñ–∑ {q.quiz_id})\n\n"
        f"{q.text}\n"
        f"–ê) {q.option_a}\n"
        f"–ë) {q.option_b}\n"
        f"–í) {q.option_c}\n\n"
        f"–ü—Ä–∞–≤–∏–ª—å–Ω–∞: {q.correct_option}\n"
        f"–ê–≤—Ç–æ—Ä: {q.created_by}"
    )
    await message.answer(text, reply_markup=approve_kb(q.id))


# --- –æ–±—Ä–æ–±–∫–∞ –∫–Ω–æ–ø–æ–∫ "–°—Ö–≤–∞–ª–∏—Ç–∏ / –í—ñ–¥—Ö–∏–ª–∏—Ç–∏"
@router.callback_query(F.data.startswith("admin:approve:"))
async def admin_approve(cb: CallbackQuery):
    if not is_admin(cb.from_user.id):
        await cb.answer("–¢—ñ–ª—å–∫–∏ –¥–ª—è –∞–¥–º—ñ–Ω—ñ–≤.", show_alert=True)
        return

    _, _, qid, val = cb.data.split(":")
    async with async_session() as db:
        await approve_question(db, int(qid), approve=(val == "1"))

    await cb.message.edit_text("‚úÖ –ó–±–µ—Ä–µ–∂–µ–Ω–æ. –í–∏–∫–æ—Ä–∏—Å—Ç–∞–π /pending —â–æ–± –ø—Ä–æ–¥–æ–≤–∂–∏—Ç–∏.")
    await cb.answer()


# --- –æ–±—Ä–æ–±–∫–∞ –∫–Ω–æ–ø–∫–∏ "–î–∞–ª—ñ"
@router.callback_query(F.data == "admin:next")
async def admin_next(cb: CallbackQuery):
    if not is_admin(cb.from_user.id):
        await cb.answer("–¢—ñ–ª—å–∫–∏ –¥–ª—è –∞–¥–º—ñ–Ω—ñ–≤.", show_alert=True)
        return

    await cb.message.edit_text("‚û°Ô∏è –í–∏–∫–æ—Ä–∏—Å—Ç–∞–π /pending —â–æ–± –ø–æ–∫–∞–∑–∞—Ç–∏ –Ω–∞—Å—Ç—É–ø–Ω–µ –ø–∏—Ç–∞–Ω–Ω—è.")
    await cb.answer()
