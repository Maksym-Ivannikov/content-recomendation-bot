from apscheduler.schedulers.asyncio import AsyncIOScheduler
from pytz import timezone
from aiogram import Bot
from aiogram.exceptions import TelegramBadRequest
from app.config import settings
from app.db import async_session
from app.repositories import weekly_recommendations


def setup_scheduler(bot):
    scheduler = AsyncIOScheduler(timezone=timezone(settings.TZ))

    async def weekly_digest():
        async with async_session() as db:
            recs = await weekly_recommendations(db)

        if not recs:
            print("‚ÑπÔ∏è –ù–µ–º–∞—î –Ω–æ–≤–∏—Ö —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ–π —Ü—å–æ–≥–æ —Ç–∏–∂–Ω—è.")
            return

        text = ["üóì –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ—ó —Ü—å–æ–≥–æ —Ç–∏–∂–Ω—è:\n"]
        for r in recs:
            emoji = {"movie":"üé¨","series":"üì∫","book":"üìñ","game":"üéÆ"}.get(r.type, "‚≠ê")
            author = f"@{r.username}" if r.username else "–∫–æ—Ä–∏—Å—Ç—É–≤–∞—á"
            text.append(f"{emoji} {r.title}\nüë§ {author}\nüí¨ {r.description}\n")
        msg = "\n".join(text).strip()

        # --- —Å—Ç–≤–æ—Ä—é—î–º–æ –Ω–æ–≤–∏–π –µ–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞ ---
        local_bot = Bot(token=settings.BOT_TOKEN)

        try:
            await local_bot.send_message(settings.GROUP_CHAT_ID, msg)
            print("‚úÖ –î–∞–π–¥–∂–µ—Å—Ç —É—Å–ø—ñ—à–Ω–æ –Ω–∞–¥—ñ—Å–ª–∞–Ω–æ.")
        except TelegramBadRequest as e:
            print(f"‚ö†Ô∏è Telegram –ø–æ–º–∏–ª–∫–∞: {e}")
        except Exception as e:
            print(f"‚ö†Ô∏è –ù–µ –≤–¥–∞–ª–æ—Å—è –Ω–∞–¥—ñ—Å–ª–∞—Ç–∏ –¥–∞–π–¥–∂–µ—Å—Ç: {e}")
        finally:
            await local_bot.session.close()

    # –ó–∞–ø—É—Å–∫–∞—î–º–æ –ø–æ –ø‚Äô—è—Ç–Ω–∏—Ü—è—Ö –æ 20:00 (Europe/Bucharest)
    scheduler.add_job(weekly_digest, "cron", day_of_week="sat", hour=13, minute=00)
    scheduler.start()
    return scheduler
